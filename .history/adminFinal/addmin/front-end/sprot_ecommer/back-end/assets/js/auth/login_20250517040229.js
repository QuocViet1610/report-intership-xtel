$(document).ready(function () {

    checkAuth();
// login
    $("#login-form").submit(function (event) {
        event.preventDefault();

        let email = $("#username").val();
        let password = $("#password").val();
        let rememberMe = $("#rememberMe").prop("checked"); 

        let emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
        if (!emailPattern.test(email)) {
            showError("Email kh√¥ng h·ª£p l·ªá");
            return;
        }


        if (password.length < 8) {
            showError("M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±!");
            return;
        }

        $.ajax({
            url: "http://localhost:8080/auth/login", 
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({
                email: email,
                password: password
            }),
            success: function (response) {
                if (response.code === "200") { 
                    let token = response.data.token;

const payload = parseJwt(token);


    const scope = payload.scope;
    console.log('Scope:', scope); // üëâ K·∫øt qu·∫£: "ROLE_USER"
    $('#yourScopeElement').text(scope); // G√°n v√†o 1 ph·∫ßn t·ª≠ n·∫øu mu·ªën hi·ªÉn th·ªã
if(scope === "ROLE_USER"){
  showError("T√†i kho·∫£n kh√°ch h√†ng kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c")
}else{

                    if (token) {
                        if (rememberMe) {
                            localStorage.setItem("authToken", token);
                            localStorage.setItem("email", email);
                            localStorage.setItem("password", password);
                        }
                        localStorage.setItem("authToken", token);
                        window.location.href = "index.html"; 
                    } else {
                        showError("L·ªói: Kh√¥ng nh·∫≠n ƒë∆∞·ª£c token t·ª´ server!");
                    }
}

  



                } else {
                    showError(response.message || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!");
                }
            },
            error: function (xhr) {
                if (xhr.responseJSON && xhr.responseJSON.message) {
                    showError(xhr.responseJSON.message); 
                } else {
                    showError("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i! Vui l√≤ng ki·ªÉm tra l·∫°i.");
                }
            }
        });
    });
// kiem tra da dang nhap chua
    function checkAuth() {
        let token = localStorage.getItem("authToken");
        if (token) {
            if (isTokenExpired(token)) {
                localStorage.removeItem("authToken");
                window.location.href = "login.html"; 
            } else {
                window.location.href = "index.html"; 
            }
        } else {
            let username = localStorage.getItem("email");
            let password = localStorage.getItem("password");
    
            if (username && password) {
                $("#username").val(username);
                $("#password").val(password);
                $("#rememberMe").prop("checked", true); 
            }
        }
    }

    function isTokenExpired(token) {
        try {
            let payloadBase64 = token.split('.')[1]; 
            let payloadJson = atob(payloadBase64);  
            let payload = JSON.parse(payloadJson); 
            
            let exp = payload.exp; 
            let currentTime = Math.floor(Date.now() / 1000); 
    
            return exp < currentTime; 
        } catch (error) {
            showError("Token kh√¥ng h·ª£p l·ªá:", error);
            return true; 
        }                         
    }

    // ƒêƒÉng xu·∫•t
    $("#logoutBtn").click(function () {
        localStorage.removeItem("authToken"); 
        localStorage.removeItem("username"); 
        localStorage.removeItem("password"); 
        window.location.href = "login.html"; 
    });

    window.checkAuth = checkAuth;
});



$(document).ready(function () {
    // ƒê·ªãnh nghƒ©a h√†m showError sau khi DOM ƒë√£ s·∫µn s√†ng
    window.showError = function (message) {
        $(".error-message").remove(); // X√≥a th√¥ng b√°o c≈© (n·∫øu c√≥)
    
        let errorHtml = `
            <div class="error-message">
                <div class="error-icon close-error">‚úñ</div>
                <div class="error-text">${message}</div>
            </div>
        `;
    
        $("body").append(errorHtml); // Th√™m v√†o cu·ªëi trang
    
        // X·ª≠ l√Ω s·ª± ki·ªán khi click v√†o n√∫t ƒë√≥ng (‚úñ)
        $(".close-error").click(function () {
            $(this).parent().fadeOut(300, function () {
                $(this).remove();
            });
        });
    
        // Hi·ªÉn th·ªã th√¥ng b√°o trong 4 gi√¢y v√† sau ƒë√≥ ·∫©n n√≥
        var errorMessage = $(".error-message").last(); // L·∫•y th√¥ng b√°o m·ªõi nh·∫•t
        setTimeout(function () {
            errorMessage.addClass("fade-out"); // Th√™m l·ªõp fade-out cho hi·ªáu ·ª©ng
            setTimeout(function () {
                errorMessage.remove(); // X√≥a th√¥ng b√°o sau khi fade-out
            }, 500); // ·∫®n sau 500ms
        }, 4000); // Hi·ªÉn th·ªã 4 gi√¢y r·ªìi t·ª± ƒë·ªông ·∫©n
    };

    // G·ªçi showError n·∫øu c√≥ l·ªói (v√≠ d·ª•)
    // showError('L·ªói ƒëƒÉng nh·∫≠p!');
 // ƒê·ªãnh nghƒ©a h√†m showSuccess
 window.showSuccess = function (message) {
    // X√≥a th√¥ng b√°o c≈© n·∫øu c√≥
    $(".success-message").remove(); 

    // T·∫°o HTML cho th√¥ng b√°o th√†nh c√¥ng
    let successHtml = `
        <div class="success-message success">
            <div class="success-icon">‚úî</div>
            <div class="success-text">${message}</div>
        </div>
    `;

    // Th√™m th√¥ng b√°o v√†o cu·ªëi trang
    $("body").append(successHtml); 

    // L·∫•y ph·∫ßn t·ª≠ th√¥ng b√°o m·ªõi nh·∫•t
    var successMessage = $(".success-message").last();

    // X√≥a l·ªõp "fade-out" n·∫øu c√≥
    successMessage.removeClass("fade-out"); 

    // ƒê·∫£m b·∫£o th√¥ng b√°o s·∫Ω t·ª± ·∫©n sau 2 gi√¢y
    setTimeout(function () {
        successMessage.addClass("fade-out"); // Th√™m l·ªõp fade-out
        setTimeout(function () {
            successMessage.remove(); // X√≥a th√¥ng b√°o sau khi hi·ªáu ·ª©ng fade-out
        }, 500); // ·∫®n sau 500ms
    }, 2000); // Hi·ªÉn th·ªã trong 2 gi√¢y r·ªìi t·ª± ƒë·ªông ·∫©n
};

});

function parseJwt(token) {
    try {
        const base64Url = token.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const jsonPayload = decodeURIComponent(
            atob(base64)
                .split('')
                .map(function (c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                })
                .join('')
        );

        return JSON.parse(jsonPayload);
    } catch (e) {
        console.error('Invalid token format', e);
        return null;
    }
}